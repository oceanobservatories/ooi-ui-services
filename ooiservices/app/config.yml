ENV_NAME: 'LOCAL_DEVELOPMENT'

COMMON: &common
    # Logging
    LOGGING: True
    LOG_FILE_PTAH: '/logs/'
    LOG_FILE: 'ooiservices.log'
    # Server config.  The UI_API_KEY matches the UI side config file. Deployment Scenario should be production for prod
    DEPLOYMENT_SCENARIO: LOCAL_DEVELOPMENT
    SECRET_KEY: 'ccdf5de08ac74855bda3e7e309d871e5'
    UI_API_KEY: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    SSL_DISABLE: False
    JSONIFY_PRETTYPRINT_REGULAR: true
    # sql / db config
    SQLALCHEMY_COMMIT_ON_TEARDOWN: True
    SQLALCHEMY_RECORD_QUERIES: True
    OOI_SLOW_DB_QUERY_TIME: 0.5
    UI_URL: 'http://localhost:5000'
    WHOOSH_BASE: 'ooiservices/whoosh_index'
    SERVER_DNS: 'localhost'
    HOST: localhost
    PORT: 4000

    # Values may be changed to work with uFrame performance. increase Data_Points for higher resolution plotting
    UFRAME_TIMEOUT_CONNECT:   5
    UFRAME_TIMEOUT_READ:      30
    UFRAME_DATA_REQUEST_LIMIT:  2880
    UFRAME_PLOT_TIMEOUT:      60
    DATA_POINTS:              1000

    # UFrame config - This section shold be pointed at the uFrame instance that is being used to populate the UI.
    UFRAME_URL:             'http://localhost:12576'
    UFRAME_ANNOTATION_URL:  'http://localhost:12580'
    UFRAME_ALERTS_URL:      'http://localhost:12577'
    UFRAME_ANTELOPE_URL:    'http://localhost:12582/data/list/antelope/'
    UFRAME_SUBSCRIBE_URL:   'http://localhost:12585'
    UFRAME_URL_BASE:        '/sensor/inv'
    UFRAME_TOC:             '/sensor/inv/toc'
    UFRAME_ANNOTATION_BASE: '/anno'
    UFRAME_VOCAB_URL:        'http://localhost:12586'

    # Asset Management: Assets, Events, Deployments, Cruises, Resources, Calibration and Status
    UFRAME_ASSETS_URL:       'http://localhost:12587'
    UFRAME_DEPLOYMENTS_URL:  'http://localhost:12587'
    UFRAME_ASSETS:           'asset'
    UFRAME_EVENTS:           'events'
    UFRAME_DEPLOYMENTS:      'events/deployment'
    UFRAME_CRUISES:          'events/cruise'
    UFRAME_RESOURCES:        'resource'
    UFRAME_CALIBRATION:      'cal'

    # Status
    UFRAME_STATUS:            'status'
    UFRAME_STATUS_QUERY:      'query'
    UFRAME_STATUS_INV:        'inv'
    DEMO_STATUS_DATA:         True

    # Streams
    UFRAME_STREAMS_URL:       'http://localhost:12575'
    UFRAME_STREAM:            'stream'
    UFRAME_STREAM_PARAMETER:  'parameter'
    UFRAME_STREAM_BYNAME:     'byname'

    # Instruments
    UFRAME_INST_URL:          'http://localhost:12572'
    UFRAME_MISSIONS_URL:      'http://localhost:8000'
    UFRAME_MISSIONS_BASE:     '/missions'
    UFRAME_INST_BASE:         '/instrument/api'
    UFRAME_PLAT_BASE:         '/platform/api'

    # M2M
    UFRAME_HOST:            'localhost'
    UFRAME_ALLOWED_M2M_PORTS:
      - 12576
      - 12577
      - 12580
      - 12585
      - 12587
      - 12578

    #Red Mine values should be left alone on test servers and set to the production settings on the production server
    REDMINE_KEY: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    REDMINE_URL: 'https://redmine-asa.ooi.rutgers.edu' #'https://uframe-cm.ooi.rutgers.edu'
    REDMINE_PROJECT_ID: 'ocean-observatory' #'ooi-ui-api-testing'
    REDMINE_TRACKER: 'Support'
    #Only change this if you change the Redis Port
    REDIS_URL: 'redis://localhost:6379'
    #This is a default value.   The tid value must be set to the production value on the production system
    GOOGLE_ANALYTICS_URL: 'https://www.google-analytics.com/collect?v=1&tid=UA-50606390-3&cid=1&t=event'
    #The Alfresco Username and Password must be set to the production values for this to work
    ALFRESCO_CMIS_URL:  'https://alfresco.oceanobservatories.org/alfresco/s/api/cmis'
    ALFRESCO_DL_URL:    'https://alfresco.oceanobservatories.org/alfresco/s/api/node/content/workspace/SpacesStore'
    ALFRESCO_TICKET_URL: 'https://alfresco.oceanobservatories.org/alfresco/s/api/login'
    ALFRESCO_LINK_URL:  'https://alfresco.oceanobservatories.org/alfresco/n/content/workspace/SpacesStore/'
    ALFRESCO_REPO_ID:   'c161bc66-4f7e-4a4f-b5f2-aac9fbf1d3cd'
    ALFRESCO_USERNAME:  'admin'
    ALFRESCO_PASSWORD:  'admin'
    #The CILogon ID and Secret Key msut be set to the proper values for this to work
    CILOGON_ID: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    CILOGON_SECRECT:  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    CILOGON_BASE_URL: 'https://test.cilogon.org'
    #Camera Store might change if OOI goes away from the Hyrax Server. If so the Camera Store must change accordingly
    IMAGE_STORE : 'ooiservices/cam_images'
    IMAGE_CAMERA_STORE : 'http://opendap-devel.ooi.rutgers.edu:8080/opendap/hyrax/large_format/'
    # flask security - email parameters.  make sure this is set for your email server.
    SECURITY_EMAIL_SENDER : 'no-reply@ooi.rutgers.edu'
    MAIL_SERVER : 'localhost'
    MAIL_PORT : 465
    MAIL_USE_SSL : True
    MAIL_USERNAME : 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
    MAIL_PASSWORD : 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
    # flask security - main parameters.  Change salt per your deployment.  Hash is constant.
    SECURITY_CONFIRMABLE : False
    SECURITY_REGISTERABLE : False
    SECURITY_RECOVERABLE : True
    SECURITY_TRACKABLE : False
    SECURITY_PASSWORD_HASH : 'pbkdf2_sha512'
    SECURITY_PASSWORD_SALT : 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
    C2_DIRECT_ACCESS_NAMESPACE: '/c2_direct_access'

DEVELOPMENT: &development
    <<: *common
    DEBUG: True
    SQLALCHEMY_DATABASE_URI: 'postgres://user:password@hostname/database_name'
    SSL_DISABLE: True
    WTF_CSRF_ENABLED: False

LOCAL_DEVELOPMENT: &local_dev
    <<: *common
    DEBUG: True
    SQLALCHEMY_DATABASE_URI: 'postgres://postgres:postgres@localhost/ooiuidev'
    SSL_DISABLE: True
    WTF_CSRF_ENABLED: False
    TOEMAIL: 'name@email.com'

TESTING_CONFIG: &testing
    <<: *common
    TESTING: True
    SQLALCHEMY_DATABASE_URI: 'postgres://postgres:postgres@localhost/ooiuitest'
    WTF_CSRF_ENABLED: False
  #Make sure TOEMAIL is set to be the recipient of new user registartion
PRODUCTION: &production
    <<: *common
    SQLALCHEMY_DATABASE_URI: 'postgres://postgres:postgres@localhost/ooiuiprod'
    SSL_DISABLE: False
    WTF_CSRF_ENABLED: True
    TOEMAIL: 'name@email.com'
